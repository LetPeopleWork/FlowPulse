name: Publish to PyPi

env:
  AzureDevOpsLighthouseIntegrationTestToken: ${{ secrets.AZUREDEVOPSLIGHTHOUSEINTEGRATIONTESTTOKEN }}
  JiraLighthouseIntegrationTestToken: ${{ secrets.JIRALIGHTHOUSEINTEGRATIONTESTTOKEN }}
  TWINE_PYPI_PASSWORD: ${{ secrets.TWINE_PYPI_PASSWORD }}
  TWINE_TESTPYPI_PASSWORD: ${{ secrets.TWINE_TESTPYPI_PASSWORD }}

on:
  push:
    branches:
      - main
    paths:
    - "flowpulse/**"
    - "tests/**"
    - "setup.py"
    - "requirements.txt"
    - ".github/workflows/publish.yml"

jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run linting
        run: |
          flake8 .
          black . --check --target-version py310
  
      - name: Run tests
        run: |
          pytest -v -m "not integration" --junitxml=test-results.xml
        continue-on-error: true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml
          
      - name: Upload test charts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-charts
          path: |
            tests/baseline_charts
            tests/test_charts
          if-no-files-found: ignore

  publish_to_testpypi:
    name: Publish to TestPyPi
    needs: test
    runs-on: ubuntu-latest

    environment:
      name: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build and publish to TestPyPi
        run: |
          pwsh ./upload_test_pypi.ps1

      - name: Install published version from TestPyPi
        run: |
          pwsh ./install_latest_test_package.ps1

      - name: Run Integration Tests
        run: |
          pytest -v -m "integration"

  publish_to_pypi:
    name: Publish to PyPi (Manual Approval)
    runs-on: ubuntu-latest
    needs: publish_to_testpypi
    if: github.ref == 'refs/heads/main'       

    environment:
      name: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build and publish to PyPi
        run: |
          pwsh ./upload_pypi.ps1